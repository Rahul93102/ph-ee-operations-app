token:
  user:
    access-validity-seconds: 600
    refresh-validity-seconds: 43200
  client:
    access-validity-seconds: 3600
    channel:
      secret: "p3456"

config:
  imu:

caching:
  enabled: false

security:
  filter-order: 4

spring:
  mvc:
    favicon:
      enabled: true
  jmx:
    enabled: false

  liquibase:
    enabled: false
  web:
    resources:
      add-mappings: true

server:
  port: 5000

frontend:
  callback-url-base: "http://localhost:4200"

client:
  id: "community-app"
  secret: "secret"

rest:
  authorization:
    enabled: false
    settings:
      - endpoint: "/api/v1/transfer/*/refund"
        authority: "hasAuthority('REFUND')"
      - endpoint: "/api/v1/**"
        authority: "hasAuthority('ALL_FUNCTIONS')"
logging:
  level:
    root: ERROR
#    pattern:
#      console: "%clr(%d{dd-MM-yyyy HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%35.35t]){faint} %clr(%-28.28logger{28}){cyan} %clr(:){faint}%X{BUSINESS-LOG} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

cloud:
  aws:
    enabled: true
    credentials:
      access-key: ${AWS_ACCESS_KEY:AKIAX32JM37TZOJ5AKFB}
      secret-key: ${AWS_SECRET_KEY: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}
    region:
      static: us-east-2
    stack:
      auto: false
  azure:
    enabled: false
    blob:
      connection-string:

payment:
  modes:
    - id: "slcb"
      type: "BATCH"
  internal-account-id-prefix: ""

rsa:
  private-key: classpath:jwt_pkcs8.pem
  public-key: classpath:jwt_pub.pem

application:
  bucket-name: paymenthub-ee-dev

recall:
  bpmn-instant: "binx_hct_inst_outgoing_recall-binx"
  bpmn-batch: "binx_ig2_outgoing_recall-binx"

zeebe:
  client:
    connection-mode: ADDRESS
    worker:
      threads: 1
    job:
      timeout: 2592000000 # 30 days
    broker:
      gatewayAddress: ${ZEEBE_GATEWAY_ADDRESS:#{'camunda8-zeebe-gateway:26500'}}
    security:
      plaintext: true

management:
  endpoint:
    health:
      show-details: always
      probes:
  endpoints:
    web.exposure.include: health,info,metrics,prometheus

baasflow:
  events:
    channels:
      audit:
        topic: "auditlog"

resilience4j:
  retry:
    instances:
      executeCommand:
        max-attempts: 3
        wait-duration: 1s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        retryExceptions: org.springframework.dao.ConcurrencyFailureException,org.eclipse.persistence.exceptions.OptimisticLockException,jakarta.persistence.OptimisticLockException,org.apache.fineract.infrastructure.core.exception.IdempotentCommandProcessUnderProcessingException
