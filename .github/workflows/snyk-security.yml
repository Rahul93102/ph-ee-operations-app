name: Snyk Security Scan

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: read
  security-events: write

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js environment if scanning Node projects (uncomment if needed)
      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 20

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Snyk Code SAST Analysis
      - name: Run Snyk Code Scan
        run: snyk code test --sarif-file-output=snyk-code.sarif
        continue-on-error: true  # Prevents job failure when vulnerabilities found

      # Snyk Open Source SCA Analysis
      - name: Run Snyk Open Source Scan
        run: snyk test --all-projects --sarif-file-output=snyk-os.sarif
        continue-on-error: true

      # Snyk IaC Analysis
      - name: Run Snyk IaC Scan
        run: snyk iac test --sarif-file-output=snyk-iac.sarif
        continue-on-error: true

      # Snyk Container Analysis (if using Docker)
      - name: Build Docker image
        if: false  # Disabled by default - set to 'true' if using containers
        run: docker build -t your/image-to-test .

      - name: Run Snyk Container Scan
        if: false  # Disabled by default - set to 'true' if using containers
        run: snyk container test your/image-to-test --sarif-file-output=snyk-container.sarif
        continue-on-error: true

      # Upload all SARIF results to GitHub Security
      - name: Upload Security Scan Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: |
            snyk-code.sarif
            snyk-os.sarif
            snyk-iac.sarif
            snyk-container.sarif
